<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fulltext.project.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.fulltext.project.entity.Department">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="leader_user_id" jdbcType="BIGINT" property="leaderUserId" />
    <result column="leader_name" jdbcType="VARCHAR" property="leaderName" />
    <result column="parent_department_id" jdbcType="BIGINT" property="parentDepartmentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fulltext.project.entity.Department">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into department (company_id, department_name, leader_user_id, 
      leader_name, parent_department_id, create_time, 
      update_time)
    values (#{companyId,jdbcType=BIGINT}, #{departmentName,jdbcType=VARCHAR}, #{leaderUserId,jdbcType=BIGINT}, 
      #{leaderName,jdbcType=VARCHAR}, #{parentDepartmentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fulltext.project.entity.Department">
    update department
    set company_id = #{companyId,jdbcType=BIGINT},
      department_name = #{departmentName,jdbcType=VARCHAR},
      leader_user_id = #{leaderUserId,jdbcType=BIGINT},
      leader_name = #{leaderName,jdbcType=VARCHAR},
      parent_department_id = #{parentDepartmentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">

    select id, company_id, department_name, leader_user_id, leader_name, parent_department_id, 
    create_time, update_time
    from department
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">

    select id, company_id, department_name, leader_user_id, leader_name, parent_department_id, 
    create_time, update_time
    from department
  </select>
</mapper>