<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fulltext.project.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.fulltext.project.entity.Notice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="notice_author" jdbcType="VARCHAR" property="noticeAuthor" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="notice_attachment_name_list" jdbcType="VARCHAR" property="noticeAttachmentNameList" />
    <result column="notice_attachment_download_path" jdbcType="VARCHAR" property="noticeAttachmentDownloadPath" />
    <result column="notice_type" jdbcType="INTEGER" property="noticeType" />
    <result column="notice_department_id" jdbcType="BIGINT" property="noticeDepartmentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fulltext.project.entity.Notice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into notice (notice_title, notice_author, notice_content, 
      notice_attachment_name_list, notice_attachment_download_path, 
      notice_type, notice_department_id, create_time, 
      update_time)
    values (#{noticeTitle,jdbcType=VARCHAR}, #{noticeAuthor,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR}, 
      #{noticeAttachmentNameList,jdbcType=VARCHAR}, #{noticeAttachmentDownloadPath,jdbcType=VARCHAR}, 
      #{noticeType,jdbcType=INTEGER}, #{noticeDepartmentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fulltext.project.entity.Notice">
    update notice
    set notice_title = #{noticeTitle,jdbcType=VARCHAR},
      notice_author = #{noticeAuthor,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      notice_attachment_name_list = #{noticeAttachmentNameList,jdbcType=VARCHAR},
      notice_attachment_download_path = #{noticeAttachmentDownloadPath,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=INTEGER},
      notice_department_id = #{noticeDepartmentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, notice_title, notice_author, notice_content, notice_attachment_name_list,
    notice_attachment_download_path, notice_type, notice_department_id, create_time, 
    update_time
    from notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, notice_title, notice_author, notice_content, notice_attachment_name_list,
    notice_attachment_download_path, notice_type, notice_department_id, create_time, 
    update_time
    from notice
  </select>
  <select id="selectNoticeListByIdList" resultMap="BaseResultMap">
    select id, notice_title, notice_author, notice_content, notice_attachment_name_list,
    notice_attachment_download_path, notice_type, notice_department_id, create_time,
    update_time
    from notice
    where id in
    <foreach collection="idList" item="id" separator="," close=")" open="(" >
        #{id}
    </foreach>
  </select>
  <select id="selectNoticeInnerOneMonth" resultMap="BaseResultMap">
    select id, notice_title, notice_author, notice_content, notice_attachment_name_list,
    notice_attachment_download_path, notice_type, notice_department_id, create_time,
    update_time
    from notice
    where DATE_ADD(create_time,INTERVAL 30 DAY) >now();
  </select>
</mapper>