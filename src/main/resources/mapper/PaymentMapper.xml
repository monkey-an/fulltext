<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fulltext.project.dao.PaymentMapper">
  <resultMap id="BaseResultMap" type="com.fulltext.project.entity.Payment">

    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="payment_id" jdbcType="BIGINT" property="paymentId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="actual_price" jdbcType="DECIMAL" property="actualPrice" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">

    delete from payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fulltext.project.entity.Payment">

    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into payment (payment_id, user_id, total_price, 
      actual_price, payment_time, create_time, 
      update_time)
    values (#{paymentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{totalPrice,jdbcType=DECIMAL}, 
      #{actualPrice,jdbcType=DECIMAL}, #{paymentTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fulltext.project.entity.Payment">

    update payment
    set payment_id = #{paymentId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      actual_price = #{actualPrice,jdbcType=DECIMAL},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">

    select id, payment_id, user_id, total_price, actual_price, payment_time, create_time, 
    update_time
    from payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">

    select id, payment_id, user_id, total_price, actual_price, payment_time, create_time, 
    update_time
    from payment
  </select>
</mapper>